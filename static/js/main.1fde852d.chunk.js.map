{"version":3,"sources":["components/NavigationLink/NavigationLink.tsx","components/Navigation/Navigation.tsx","components/PageNotFound/PageNotFound.tsx","pages/HomePage/HomePage.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","helpers/index.tsx","components/PeopleList/PeopleList.tsx","api.ts","components/Loader/Loader.tsx","types/ErrorType.ts","pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavigationLink","_ref","url","title","_jsx","NavLink","className","_ref2","isActive","classNames","to","concat","children","Navigation","role","_jsxs","PageNotFound","HomePage","PersonLink","person","slug","name","isWoman","sex","Link","PersonInfo","born","died","motherName","fatherName","mother","father","isSelected","useParams","personSlug","getParent","people","find","PeopleList","map","personWithParents","_objectSpread","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","ErrorType","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isErrorLoading","setIsErrorLoading","isPeopleInServer","length","useEffect","persons","catch","finally","loadingError","missingData","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.1fde852d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  url: string,\n  title: string,\n};\n\nexport const NavigationLink : React.FC<Props> = ({ url, title }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={`${url}`}\n  >\n    {title}\n  </NavLink>\n);\n","import { NavigationLink } from '../NavigationLink/NavigationLink';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationLink url=\"/\" title=\"Home\" />\n        <NavigationLink url=\"/people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    name,\n    sex,\n  } = person;\n\n  const isWoman = sex === 'f';\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames({\n        'has-text-danger': isWoman,\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\n\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  mother?: Person;\n  father?: Person;\n};\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  const isSelected = slug === personSlug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames(\n        {\n          'has-background-warning': isSelected,\n        },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (<PersonLink person={mother} />)\n          : (\n            motherName || '-'\n          )}\n      </td>\n\n      <td>\n        {father\n          ? (<PersonLink person={father} />)\n          : (\n            fatherName || '-'\n          )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../types';\n\nexport const getParent = (people: Person[], name: string | null) => (\n  people.find(person => person.name === name)\n);\n","import { PersonInfo } from '../PersonInfo/PersonInfo';\n\nimport { Person } from '../../types/Person';\nimport { getParent } from '../../helpers';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  return (\n    <tbody>\n      {people.map((person) => {\n        const {\n          slug,\n          motherName,\n          fatherName,\n        } = person;\n        const mother = getParent(people, motherName);\n        const father = getParent(people, fatherName);\n\n        const personWithParents = {\n          ...person,\n          mother,\n          father,\n        };\n\n        return (\n          <PersonInfo\n            person={personWithParents}\n            key={slug}\n          />\n        );\n      })}\n    </tbody>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum ErrorType {\n  loadingError = 'Something went wrong',\n  missingData = 'There are no people on the server',\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleList } from '../../components/PeopleList/PeopleList';\n\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { Loader } from '../../components/Loader';\nimport { ErrorType } from '../../types/ErrorType';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErrorLoading, setIsErrorLoading] = useState(false);\n\n  const isPeopleInServer = people.length > 0;\n\n  const loadPeople = () => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((persons) => setPeople(persons))\n      .catch(() => setIsErrorLoading(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading && <Loader />}\n\n            {isErrorLoading && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                {ErrorType.loadingError}\n              </p>\n            )}\n\n            {!isLoading\n              && !isPeopleInServer\n                && (\n                  <p data-cy=\"noPeopleMessage\">\n                    {ErrorType.missingData}\n                  </p>\n                )}\n\n            {isPeopleInServer && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <PeopleList people={people} />\n\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <div className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Routes>\n    </div>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}